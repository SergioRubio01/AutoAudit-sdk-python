# coding: utf-8

"""
    AutoAudit API

    API for AutoAudit

    The version of the OpenAPI document: 1.0.0
    Contact: support@autoaudit.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from autoaudit.models.autoaudit_interfaces_api_v1_superagents_agent_response import AutoauditInterfacesApiV1SuperagentsAgentResponse

class TestAutoauditInterfacesApiV1SuperagentsAgentResponse(unittest.TestCase):
    """AutoauditInterfacesApiV1SuperagentsAgentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AutoauditInterfacesApiV1SuperagentsAgentResponse:
        """Test AutoauditInterfacesApiV1SuperagentsAgentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AutoauditInterfacesApiV1SuperagentsAgentResponse`
        """
        model = AutoauditInterfacesApiV1SuperagentsAgentResponse()
        if include_optional:
            return AutoauditInterfacesApiV1SuperagentsAgentResponse(
                id = '',
                name = '',
                description = '',
                capabilities = [
                    autoaudit.models.agent_capability_response.AgentCapabilityResponse(
                        id = '', 
                        name = '', 
                        description = '', 
                        parameters = {
                            'key' : null
                            }, 
                        category = '', 
                        execution_tier = '', )
                    ],
                tools = [
                    autoaudit.models.agent_tool_response.AgentToolResponse(
                        tool_id = '', 
                        name = '', 
                        description = '', 
                        parameters = {
                            'key' : null
                            }, )
                    ],
                llm_id = '',
                organization_id = '',
                creator_id = '',
                status = '',
                execution_tier = '',
                max_iterations = 56,
                created_at = '',
                updated_at = '',
                last_execution_at = '',
                execution_count = 56,
                metadata = {
                    'key' : null
                    }
            )
        else:
            return AutoauditInterfacesApiV1SuperagentsAgentResponse(
                id = '',
                name = '',
                description = '',
                capabilities = [
                    autoaudit.models.agent_capability_response.AgentCapabilityResponse(
                        id = '', 
                        name = '', 
                        description = '', 
                        parameters = {
                            'key' : null
                            }, 
                        category = '', 
                        execution_tier = '', )
                    ],
                organization_id = '',
                creator_id = '',
                status = '',
                execution_tier = '',
                max_iterations = 56,
        )
        """

    def testAutoauditInterfacesApiV1SuperagentsAgentResponse(self):
        """Test AutoauditInterfacesApiV1SuperagentsAgentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
