# coding: utf-8

"""
    AutoAudit API

    API for AutoAudit

    The version of the OpenAPI document: 1.0.0
    Contact: support@autoaudit.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from autoaudit.models.autoaudit_interfaces_api_v1_superagents_create_agent_request import AutoauditInterfacesApiV1SuperagentsCreateAgentRequest

class TestAutoauditInterfacesApiV1SuperagentsCreateAgentRequest(unittest.TestCase):
    """AutoauditInterfacesApiV1SuperagentsCreateAgentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AutoauditInterfacesApiV1SuperagentsCreateAgentRequest:
        """Test AutoauditInterfacesApiV1SuperagentsCreateAgentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AutoauditInterfacesApiV1SuperagentsCreateAgentRequest`
        """
        model = AutoauditInterfacesApiV1SuperagentsCreateAgentRequest()
        if include_optional:
            return AutoauditInterfacesApiV1SuperagentsCreateAgentRequest(
                name = '',
                description = '',
                capabilities = [
                    autoaudit.models.agent_capability_request.AgentCapabilityRequest(
                        name = '', 
                        description = '', 
                        parameters = {
                            'key' : null
                            }, 
                        category = 'general', 
                        execution_tier = 'standard', )
                    ],
                tools = [
                    autoaudit.models.agent_tool_request.AgentToolRequest(
                        tool_id = '', 
                        parameters = {
                            'key' : null
                            }, )
                    ],
                llm_id = '',
                metadata = {
                    'key' : null
                    },
                execution_tier = 'standard',
                max_iterations = 56
            )
        else:
            return AutoauditInterfacesApiV1SuperagentsCreateAgentRequest(
                name = '',
                description = '',
                capabilities = [
                    autoaudit.models.agent_capability_request.AgentCapabilityRequest(
                        name = '', 
                        description = '', 
                        parameters = {
                            'key' : null
                            }, 
                        category = 'general', 
                        execution_tier = 'standard', )
                    ],
        )
        """

    def testAutoauditInterfacesApiV1SuperagentsCreateAgentRequest(self):
        """Test AutoauditInterfacesApiV1SuperagentsCreateAgentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
